//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JAEscobarLibrosEntities : DbContext
    {
        public JAEscobarLibrosEntities()
            : base("name=JAEscobarLibrosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Autor> Autors { get; set; }
        public virtual DbSet<Editorial> Editorials { get; set; }
        public virtual DbSet<Libro> Libroes { get; set; }
    
        public virtual int BorrarLibroEditorial(Nullable<int> idEditorial)
        {
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarLibroEditorial", idEditorialParameter);
        }
    
        public virtual int BorrarLibroPorAutor(Nullable<int> idAutor)
        {
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarLibroPorAutor", idAutorParameter);
        }
    
        public virtual ObjectResult<ConsultaPorAutorFecha_Result> ConsultaPorAutorFecha(Nullable<System.DateTime> fecha, string idAutor)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idAutorParameter = idAutor != null ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorAutorFecha_Result>("ConsultaPorAutorFecha", fechaParameter, idAutorParameter);
        }
    
        public virtual ObjectResult<ConsultaPorEditorial_Result> ConsultaPorEditorial(string editorial)
        {
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorEditorial_Result>("ConsultaPorEditorial", editorialParameter);
        }
    
        public virtual ObjectResult<ConsultaPorFecha_Result> ConsultaPorFecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorFecha_Result>("ConsultaPorFecha", fechaParameter);
        }
    
        public virtual int CrearLibro(string iSN, string titulo, Nullable<int> paginas, Nullable<System.DateTime> fecha_Publicacion, Nullable<int> idEditorial, Nullable<int> idAutor)
        {
            var iSNParameter = iSN != null ?
                new ObjectParameter("ISN", iSN) :
                new ObjectParameter("ISN", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var paginasParameter = paginas.HasValue ?
                new ObjectParameter("Paginas", paginas) :
                new ObjectParameter("Paginas", typeof(int));
    
            var fecha_PublicacionParameter = fecha_Publicacion.HasValue ?
                new ObjectParameter("Fecha_Publicacion", fecha_Publicacion) :
                new ObjectParameter("Fecha_Publicacion", typeof(System.DateTime));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearLibro", iSNParameter, tituloParameter, paginasParameter, fecha_PublicacionParameter, idEditorialParameter, idAutorParameter);
        }
    
        public virtual ObjectResult<ConsultaPorAutor_Result> ConsultaPorAutor(Nullable<int> idAutor)
        {
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorAutor_Result>("ConsultaPorAutor", idAutorParameter);
        }
    
        public virtual ObjectResult<ConsultaPorTitulo_Result> ConsultaPorTitulo(string titulo)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorTitulo_Result>("ConsultaPorTitulo", tituloParameter);
        }
    
        public virtual ObjectResult<ConsultaPorAutorEditorial_Result> ConsultaPorAutorEditorial(Nullable<int> idAutor, Nullable<int> idEditorial)
        {
            var idAutorParameter = idAutor.HasValue ?
                new ObjectParameter("IdAutor", idAutor) :
                new ObjectParameter("IdAutor", typeof(int));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("IdEditorial", idEditorial) :
                new ObjectParameter("IdEditorial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultaPorAutorEditorial_Result>("ConsultaPorAutorEditorial", idAutorParameter, idEditorialParameter);
        }
    
        public virtual ObjectResult<ObtenerLibros_Result> ObtenerLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerLibros_Result>("ObtenerLibros");
        }
    }
}
